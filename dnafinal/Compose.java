/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Compose.java
 *
 * Created on Nov 18, 2016, 12:55:44 PM
 */
package dnafinal;

//import com.mysql.jdbc.Statement;
import java.awt.BorderLayout;
import java.awt.ComponentOrientation;
import java.math.BigInteger;
import java.sql.Connection;
//import java.sql.DriverManager;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.attribute.standard.OutputDeviceAssigned;
import org.omg.IOP.Encoding;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.SQLException;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
/**
 *
 * @author ACER
 */
public class Compose extends javax.swing.JPanel {
   String patternEmail="([a-zA-Z0-9])*([._0-9a-zA-Z])*[@]([a-zA-Z0-9])+[.][a-z]{2,3}";;
    /** Creates new form Compose */
    public Compose() {
     
        initComponents();
      pnl1.setEnabled(false);
         btnSend.setEnabled(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtMail = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtSub = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtData = new javax.swing.JTextArea();
        btnEncrypt = new javax.swing.JButton();
        pnl1 = new javax.swing.JPanel();
        btnSend = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtEndata = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtDNADigitalCode = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtBinaryValue = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtHexadecimal = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtAsciiValue = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(255, 255, 204));
        setPreferredSize(new java.awt.Dimension(800, 500));
        setRequestFocusEnabled(false);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        jLabel1.setText("Email :");

        txtMail.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        jLabel2.setText(" Subject :");

        txtSub.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        jLabel3.setText(" Text :");

        txtData.setColumns(20);
        txtData.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtData.setRows(5);
        jScrollPane1.setViewportView(txtData);

        btnEncrypt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnEncrypt.setText("Encrypt");
        btnEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncryptActionPerformed(evt);
            }
        });

        pnl1.setBackground(new java.awt.Color(255, 255, 204));

        btnSend.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        txtEndata.setEditable(false);
        txtEndata.setBackground(new java.awt.Color(0, 0, 0));
        txtEndata.setColumns(20);
        txtEndata.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtEndata.setForeground(new java.awt.Color(255, 255, 255));
        txtEndata.setRows(5);
        txtEndata.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtEndata.setEnabled(false);
        jScrollPane2.setViewportView(txtEndata);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        jLabel4.setText("Amplified Message:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        jLabel8.setText("DNA Digital Code:");

        txtDNADigitalCode.setEditable(false);
        txtDNADigitalCode.setBackground(new java.awt.Color(0, 0, 0));
        txtDNADigitalCode.setColumns(20);
        txtDNADigitalCode.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtDNADigitalCode.setForeground(new java.awt.Color(255, 255, 255));
        txtDNADigitalCode.setRows(5);
        txtDNADigitalCode.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtDNADigitalCode.setEnabled(false);
        jScrollPane6.setViewportView(txtDNADigitalCode);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        jLabel7.setText("Binary:");

        txtBinaryValue.setEditable(false);
        txtBinaryValue.setBackground(new java.awt.Color(0, 0, 0));
        txtBinaryValue.setColumns(20);
        txtBinaryValue.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtBinaryValue.setForeground(new java.awt.Color(255, 255, 255));
        txtBinaryValue.setRows(5);
        txtBinaryValue.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtBinaryValue.setEnabled(false);
        jScrollPane5.setViewportView(txtBinaryValue);

        txtHexadecimal.setEditable(false);
        txtHexadecimal.setBackground(new java.awt.Color(0, 0, 0));
        txtHexadecimal.setColumns(20);
        txtHexadecimal.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtHexadecimal.setForeground(new java.awt.Color(255, 255, 255));
        txtHexadecimal.setRows(5);
        txtHexadecimal.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtHexadecimal.setEnabled(false);
        jScrollPane3.setViewportView(txtHexadecimal);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        jLabel6.setText("Hexadecimal:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 3, 16)); // NOI18N
        jLabel5.setText("ASCII:");

        txtAsciiValue.setEditable(false);
        txtAsciiValue.setBackground(new java.awt.Color(0, 0, 0));
        txtAsciiValue.setColumns(20);
        txtAsciiValue.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtAsciiValue.setForeground(new java.awt.Color(255, 255, 255));
        txtAsciiValue.setRows(5);
        txtAsciiValue.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        txtAsciiValue.setEnabled(false);
        jScrollPane4.setViewportView(txtAsciiValue);

        javax.swing.GroupLayout pnl1Layout = new javax.swing.GroupLayout(pnl1);
        pnl1.setLayout(pnl1Layout);
        pnl1Layout.setHorizontalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl1Layout.createSequentialGroup()
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(284, 284, 284)
                        .addComponent(btnSend))
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl1Layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(jLabel5))
                            .addGroup(pnl1Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jLabel6))
                            .addGroup(pnl1Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jLabel7))
                            .addGroup(pnl1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel8))
                            .addGroup(pnl1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(54, 54, 54)
                        .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane3)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        pnl1Layout.setVerticalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl1Layout.createSequentialGroup()
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel4))
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addComponent(btnSend))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
                            .addComponent(txtSub)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(btnEncrypt))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMail, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel3)))
                .addGap(20, 20, 20)
                .addComponent(btnEncrypt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
public String convertStringToHex(char[] str){

	  //char[] chars = str.toCharArray();

	  StringBuffer hex = new StringBuffer();
	  for(int i = 0; i < str.length; i++){
	    hex.append(Integer.toHexString((int)str[i]));
	  }

	  return hex.toString();
  }
/* hexa to ascii  ascii to string */
public String convertHexToString(String hex){

	  StringBuilder sb = new StringBuilder();
	  StringBuilder temp = new StringBuilder();

	  //49204c6f7665204a617661 split into two characters 49, 20, 4c...
	  for( int i=0; i<hex.length()-1; i+=2 ){

	      //grab the hex in pairs
	      String output = hex.substring(i, (i + 2));
	      //convert hex to decimal
	      int decimal = Integer.parseInt(output, 16);
	      //convert the decimal to character
	      sb.append((char)decimal);

	      temp.append(decimal);
	  }
	  System.out.println("Decimal : " + temp.toString());

	  return sb.toString();
  }
     public static String hexToBinary(String hex) {
   // return new BigInteger(hex, 16).toString(2);
         
         StringBuilder binStrBuilder = new StringBuilder();
                int c = 1;
                for (int i = 0; i < hex.length() - 1; i += 2) {

                        String output = hex.substring(i, (i + 2));

                        int decimal = Integer.parseInt(output, 16);

                        String binStr = Integer.toBinaryString(decimal);
                        int len = binStr.length();
                        StringBuilder sbf = new StringBuilder();
                        if (len < 8) {

                                for (int k = 0; k < (8 - len); k++) {
                                        sbf.append("0");
                                }
                                sbf.append(binStr);
                        } else {
                                sbf.append(binStr);
                        }

                        c++;
                        binStrBuilder.append(sbf.toString());
                }

                return binStrBuilder.toString();
}
public static String binaryToHex(String bin) {
  // return String.format("%X", Long.parseLong(bin,2)) ;
    String s = bin;
BigInteger b = new BigInteger(s, 2);
System.out.println(b.toString(16));
String value=b.toString(16);
   //  return Long.toHexString(Long.parseLong(bin,2));
     //return String.format("%X", Long.parseLong(bin,2)) ;
 //return String.format("%X", Long.parseLong(bin,2)) ;
//    return String.format("%02X", Long.parseUnsignedLong(bin,2)) ;
return value;
}
    private void btnEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncryptActionPerformed
        // TODO add your handling code here:
        
     
        String mail=txtMail.getText();
        String sub=txtSub.getText();
        String text=txtData.getText();
         if(Pattern.matches(patternEmail, mail))
         {
             int checKemail=DataBase.checkIfEmail(mail);
             if(checKemail>0)
             {
                   btnSend.setEnabled(true);
                   pnl1.setEnabled(true);
                    btnEncrypt.setEnabled(false);
                  char[] ascii1 = text.toCharArray();

    for(char ch:ascii1){
        System.out.println((int)ch+"  ");
     txtAsciiValue.append(""+(int)ch);
  
       
    }
    /*end of string to ascii */
    /*ascii to string */
    String str=null;
        for(int i: ascii1){
         str = Character.toString((char)i);
            System.out.println(str);
        }
               
        String x=convertStringToHex(ascii1); //ascii to hex
        System.out.println("Hexadecimal Value:"+x);
        txtHexadecimal.setText(x);
//        String as=convertHexToString(x);//hex to ascii to string
//        System.out.println("Hex to string"+as);
       String b=hexToBinary(x); //hexa to binary
       System.out.println("Hex to Binary : "+b);
       txtBinaryValue.setText(b);
//      String hh=binaryToHex(b);//binary to hexa
//      System.out.println("Bin to hexa: "+hh);
        String bin1;
        if (b.length() % 2 == 0)
            {
                bin1 = b;
            }
            else
            {
                bin1 = b + "0";
            }
        System.out.println("Binary With Append: "+bin1);
                 System.out.println(b+"\n"+bin1);
       String a;
       String sum="";
   for (int i = 0; i < bin1.length(); i = i + 2)
            {

                a = bin1.substring(i, i+2);

                if ("01".equals(a))
                {
                    a = "T";
                }
                else 
                    if ("00".equals(a))
                {
                    a = "A";
                }
                else if ("10".equals(a))
                {
                    a = "G";
                }
                else if ("11".equals(a))
                {
                    a = "C";
                }

                sum += a;
                //System.out.println(sum);
             }
   System.out.println("sum value: "+sum);
   txtDNADigitalCode.setText(sum);
   String sum1="";
   String c;
    for (int i = 0; i < sum.length(); i = i + 2)
            {
                // mList.Add(binary.Substring(i, 2));
                c = sum.substring(i, i+2);
                if ("AA".equals(c))
                {
                    c = "0101";

                }
                else if ("AC".equals(c))
                {
                    c = "0010";
                }

                else if ("AT".equals(c))
                {
                    c = "0011";
                }
                else if ("AG".equals(c))
                {
                    c = "0001";
                }
                else if ("TA".equals(c))
                {
                    c = "0110";
                }
                else if ("TT".equals(c))
                {
                    c = "1111";
                }
                else if ("TG".equals(c))
                {
                    c = "0111";
                }
                else if ("TC".equals(c))
                {
                    c = "1001";
                }
                else if ("GA".equals(c))
                {
                    c = "1010";
                }
                else if ("GT".equals(c))
                {
                    c = "0100";
                }
                else if ("GG".equals(c))
                {
                    c = "1000";
                }
                else if ("GC".equals(c))
                {
                    c = "1100";
                }
                else if ("CA".equals(c))
                {
                    c = "1110";
                }
                else if ("CT".equals(c))
                {
                    c = "1011";
                }
                else if ("CG".equals(c))
                {
                    c = "0000";
                }
                else if ("CC".equals(c))
                {
                    c = "1101";
                }
                sum1 += c;
               // textBox1.Text += sum1;
               // System.out.println(sum1);
            }
   System.out.println("Sum1: "+sum1);
   txtEndata.setText(sum1);
             }
             else
             {
                 JOptionPane.showMessageDialog(null, "This Email Id is not registered");
             }
             
         }
         else
         {
             JOptionPane.showMessageDialog(null, "Invalid Email Id");
         }
        
       
       
  
   
    }//GEN-LAST:event_btnEncryptActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
         try {
        String send=Login.uname1;
        String rec=txtMail.getText();
        String id=Login.id1;
        String msg=txtEndata.getText();
        String sub=txtSub.getText();
         java.sql.Date dt=new java.sql.Date(System.currentTimeMillis());
   String dt1=dt.toString();
   System.out.println(dt1);
   Calendar cal=Calendar.getInstance();
   SimpleDateFormat sdf=new SimpleDateFormat("HH:mm:ss");
   String time=sdf.format(cal.getTime()).toString();
   System.out.println(time);
       
          
            int check=DataBase.insertIntoUserDetails(send, rec, dt1, sub,time, msg, id);
            if(check>0)
            {
                 JOptionPane.showMessageDialog(null, "Your message has been sent");
                 this.removeAll();
                 this.repaint();
                 this.revalidate();
                 this.setLayout(new BorderLayout());
            }
            else
            {
                 JOptionPane.showMessageDialog(null, "Oops!! Something went wrong");
            }
                   
       
        }
                    
                    catch (Exception ex) {}
    }//GEN-LAST:event_btnSendActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEncrypt;
    private javax.swing.JButton btnSend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JPanel pnl1;
    private javax.swing.JTextArea txtAsciiValue;
    private javax.swing.JTextArea txtBinaryValue;
    private javax.swing.JTextArea txtDNADigitalCode;
    private javax.swing.JTextArea txtData;
    private javax.swing.JTextArea txtEndata;
    private javax.swing.JTextArea txtHexadecimal;
    private javax.swing.JTextField txtMail;
    private javax.swing.JTextField txtSub;
    // End of variables declaration//GEN-END:variables
}
